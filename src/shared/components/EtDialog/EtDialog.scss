:root {
  --et-dialog-width: 400px;
}

.et-dialog {
  border: none;
  padding: 0;
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  background-color: #fff;
  color: #333;

  // Animation properties for transform and opacity
  transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  opacity: 0;
  max-height: unset;

  // IMPORTANT: Override default dialog centering for slide animations
  // This ensures 'top:0', 'left:0'/'right:0' take precedence.
  &[open]:not(.et-dialog--slide-right):not(.et-dialog--slide-left) {
    margin: auto;
  }

  // Backdrop styling
  &::backdrop {
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(2px);
    opacity: 0;
    transition: opacity 0.3s ease-out;
  }

  // Styles when the dialog is open
  &[open] {
    opacity: 1;
    animation: fade-in 0.3s forwards;

    &::backdrop {
      opacity: 1;
      animation: fade-backdrop-in 0.3s forwards;
    }
  }

  // Slide-from-right animation
  &.et-dialog--slide-right {
    position: fixed;
    margin: 0;
    top: 0;
    // Remove 'right: 0' from here. We'll control position entirely with transform.
    height: 100vh;
    width: var(--et-dialog-width);
    max-width: 90%;
    // Start completely off-screen to the right, using viewport width
    transform: translateX(100vw);
    opacity: 0;

    &[open] {
      // End at the very right edge (0px from right)
      transform: translateX(calc(100vw - var(--et-dialog-width)));
      opacity: 1;
      animation: none;
    }

    &:not([open]) {
      // When closing, slide back out off-screen to the right
      transform: translateX(100vw);
      opacity: 0;
    }
  }

  // Slide-from-left animation
  &.et-dialog--slide-left {
    position: fixed;
    margin: 0;
    top: 0;
    // Remove 'left: 0' from here. Control position entirely with transform.
    // left: 0; /* REMOVER */
    height: 100vh;
    width: var(--et-dialog-width);
    max-width: 90%;
    // Start completely off-screen to the left, using viewport width
    transform: translateX(-100vw);
    opacity: 0;

    &[open] {
      // End at the very left edge (0px from left)
      transform: translateX(0);
      opacity: 1;
      animation: none;
    }

    &:not([open]) {
      // When closing, slide back out off-screen to the left
      transform: translateX(-100vw);
      opacity: 0;
    }
  }

  // Flexbox for internal layout, allowing body to scroll
  display: flex;
  flex-direction: column;

  .et-dialog-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
    border-bottom: 1px solid #eee;
    background-color: #f8f8f8;
  }

  .et-dialog-title {
    margin: 0;
    font-size: 1.5em;
    color: #333;
  }

  .et-dialog-close {
    background: none;
    border: none;
    font-size: 1.8em;
    cursor: pointer;
    color: #999;
    line-height: 1;
    padding: 0;
    transition: color 0.2s ease;

    &:hover {
      color: #333;
    }
  }

  .et-dialog-body {
    padding: 20px;
    line-height: 1.6;
    color: #555;
    overflow-y: auto;
    flex-grow: 1;
    height: calc(100vh - 70px);
  }
}

// Keyframes for general fade-in animations (when slideFrom is 'none')
@keyframes fade-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fade-backdrop-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}